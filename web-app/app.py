import streamlit as st
import requests
from PIL import Image

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API
CAPTION_API_URL = 'http://caption_api:8000/caption'
TTS_API_URL = 'http://tts_api:8002/tts'


# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã 
st.set_page_config(
    page_title="Image Captioning Project",
    page_icon="üì∏",
    layout="centered",
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
st.markdown("<h1 style='text-align: center; color: #4A90E2;'>Image Captioning Project</h1>", unsafe_allow_html=True)

st.markdown("""
<div style='text-align: center; margin-bottom: 10px;'>
    <a href='https://github.com/CriminalSparrow/Image-description-generation' target='_blank' style='color: #0366d6; text-decoration: none; font-size: 18px;'>
        üîó –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub –ø—Ä–æ–µ–∫—Ç–∞
    </a>
</div>
""", unsafe_allow_html=True)

st.markdown("<h4 style='text-align: center; color: gray;'>–°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h4>", unsafe_allow_html=True)
st.markdown("---")

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞  
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã PNG, JPG, JPEG)", type=['png', 'jpg', 'jpeg'])

# –í—ã–±–æ—Ä —Å—Ç–µ–ø–µ–Ω–∏ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
detail_level = st.selectbox(
    '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è:',
    ['–ö—Ä–∞—Ç–∫–æ–µ', '–û–±—ã—á–Ω–æ–µ', '–ü–æ–¥—Ä–æ–±–Ω–æ–µ']
)

# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å prompt
prompt_mapping = {
    '–ö—Ä–∞—Ç–∫–æ–µ': '<CAPTION>',
    '–û–±—ã—á–Ω–æ–µ': '<DETAILED_CAPTION>',
    '–ü–æ–¥—Ä–æ–±–Ω–æ–µ': '<MORE_DETAILED_CAPTION>'
}

selected_prompt = prompt_mapping[detail_level]

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', use_container_width=True)

    if st.button('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ'):
        with st.spinner('–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...'):
            files = {'file': uploaded_file.getvalue()}
            params = {'prompt': selected_prompt}
            response = requests.post(CAPTION_API_URL, files=files, params=params)
            
            if response.status_code == 200:
                data = response.json()
                caption_ru = data['caption']
                confidence = data['mean_confidence']

                st.markdown(f"### –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
                st.success(f"{caption_ru}")

                st.markdown(f"### –°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏:")
                st.info(f"{confidence * 100:.2f}%")

                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è TTS
                with st.spinner('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ...'):
                    tts_payload = {
                        "text": caption_ru,
                        "lang": "ru-RU",
                        "voice": "ru-RU-DmitryNeural"
                    }

                    tts_response = requests.post(TTS_API_URL, json=tts_payload)

                    if tts_response.status_code == 200:
                        st.markdown("### –û–∑–≤—É—á–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è:")
                        st.audio(tts_response.content, format="audio/mp3")
                    else:
                        st.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ')
            else:
                st.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è')

# Footer
st.markdown("---")
st.markdown("""
    <div style='text-align: center;'>
        <h5>–ü—Ä–æ–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω:</h5>
        <ul style='list-style-position: inside; text-align: left; display: inline-block;'>
            <li><strong>Polina O</strong> ‚Äî People detection and gender/age/amount classification</li>
            <li><strong>Egor Sokolov</strong> ‚Äî Image description</li>
            <li><strong>Artyom Fedotov</strong> ‚Äî Interface elements detection</li>
            <li><strong>Ilya Gerasimov</strong> ‚Äî Text recognition</li>
        </ul>
        <p style='color: gray; font-size: 14px;'>2025</p>
    </div>
""", unsafe_allow_html=True)

